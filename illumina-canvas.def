Bootstrap: docker
From: centos:latest

%post
rpm --import https://packages.microsoft.com/keys/microsoft.asc
sh -c 'echo -e "[packages-microsoft-com-prod]\nname=packages-microsoft-com-prod \nbaseurl= https://packages.microsoft.com/yumrepos/microsoft-rhel7.3-prod\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/dotnetdev.repo'
yum update -y
yum install -y libunwind libicu git wget
yum install -y dotnet-sdk-2.0.2

# adjust these paths to reflect where you have downloaded the Nirvana data files
# In this example, we assume that the Cache, References, and SupplementaryDatabase
# folders have been downloaded into the NIRVANA_ROOT folder.

# In addition to downloading the Nirvana data files, make sure you have .NET Core 2.0
# installed on your computer:
# https://www.microsoft.com/net/download/core

NIRVANA_ROOT=~/Nirvana
NIRVANA_BIN=$NIRVANA_ROOT/bin/Release/netcoreapp2.0/Nirvana.dll
DATA_DIR=$NIRVANA_ROOT/Data

CACHE_DIR=$DATA_DIR/Cache/24/GRCh37
SA_DIR=$DATA_DIR/SupplementaryDatabase/40
REF_DIR=$DATA_DIR/References/5

CACHE_TGZ=$DATA_DIR/v24.tar.gz
REF_TGZ=$DATA_DIR/v5.tar.gz
SD_GRCH37_TGZ=$DATA_DIR/v40_GRCh37.tar.gz
SD_GRCH38_TGZ=$DATA_DIR/v40_GRCh38.tar.gz

CACHE_TEST=$CACHE_DIR/Ensembl84.transcripts.ndb
SD_GRCH37_TEST=$SA_DIR/GRCh37/chr1.nsa
SD_GRCH38_TEST=$SA_DIR/GRCh38/chr1.nsa
REF_TEST=$REF_DIR/Homo_sapiens.GRCh37.Nirvana.dat

# download the Nirvana source
if [ ! -d $NIRVANA_ROOT ]
then
    git clone https://github.com/Illumina/Nirvana.git $NIRVANA_ROOT
fi

cd $NIRVANA_ROOT

# create the data directories
if [ ! -d Data ]
then
    mkdir -p Data/Cache Data/References $SA_DIR 
fi

# ==============================
# download all of the data files
# ==============================

#URL_LIST=""
#
#if [ ! -f $REF_TEST ]
#then
#	URL_LIST="$URL_LIST https://illumina-annotation.s3.amazonaws.com/References/v5.tar.gz"
#fi
#
#if [ ! -f $CACHE_TEST ]
#then
#    URL_LIST="$URL_LIST https://illumina-annotation.s3.amazonaws.com/Cache/v24.tar.gz"
#fi
#
#if [ ! -f $SD_GRCH37_TEST ]
#then
#    URL_LIST="$URL_LIST https://illumina-annotation.s3.amazonaws.com/SA/40/v40_GRCh37.tar.gz"
#fi
#
#if [ ! -f $SD_GRCH38_TEST ]
#then
#    URL_LIST="$URL_LIST https://illumina-annotation.s3.amazonaws.com/SA/40/v40_GRCh38.tar.gz"
#fi
#
#if [ ! -z "$URL_LIST" ]
#then
#	echo "- downloading data files in parallel... "
#	echo $URL_LIST | xargs -n 1 -P 8 wget -qcP Data
#	echo "finished."
#fi
#
## =====================
## unpack the data files
## =====================
#
#unpack_file() {
#	if [ -f $3 ]
#	then
#		echo "- unpacking $1 files:"
#		pushd $2
#		tar xfz $3
#		popd
#		rm $3
#	fi
#}
#
#unpack_file "reference" $DATA_DIR $REF_TGZ
#unpack_file "cache" $DATA_DIR $CACHE_TGZ
#unpack_file "supplementary annotation GRCh37" $SA_DIR $SD_GRCH37_TGZ
#unpack_file "supplementary annotation GRCh38" $SA_DIR $SD_GRCH38_TGZ
#
# =============
# build Nirvana
# =============

if [ ! -f $NIRVANA_BIN ]
then
    pushd Nirvana
    dotnet restore
    dotnet build -c Release
    popd
fi

# ==============================
# run Nirvana on a test VCF file
# ==============================

# download a test vcf file
#if [ ! -f HiSeq.10000.vcf ]
#then
#    wget https://github.com/samtools/htsjdk/raw/master/src/test/resources/htsjdk/variant/HiSeq.10000.vcf
#fi
#
## analyze it with Nirvana
#dotnet $NIRVANA_BIN -c $CACHE_DIR/Ensembl84 --sd $SA_DIR/GRCh37 -r $REF_TEST -i HiSeq.10000.vcf -o HiSeq.10000.annotated

